#+title: SCIMODOM TODOs
#+author: E. Boileau

Draft or long-running issues, WIP, triage, and additional references or context re open issues.

* TODO SCIMODOM DRAFT ISSUES

** TODO STYLE [0/9]

- [ ] Logos are displayed in ~dark:greyscale~ in dark mode; ~dark:invert~ only inverts the color.
- [ ] Charts do not look great in dark mode.
- [ ] ~VirtualScroll~ not working, see [[https://github.com/primefaces/primevue-tailwind/issues/108][Missing preset for VirtualScroller]] and [[https://github.com/primefaces/primevue-tailwind/issues/168][VirtualScroller not working with DataTabe.]]
  As of v4.1.1, the new Tailwind styles have been rewritten using the preprocessor approach with ~@apply~ instead of pass-through.
  We're currently using ~primevue@3.53.1~ and ~tailwindcss-primeui@0.3.4~. Updating to PrimeVue v4.2 will most likely
  break the application, /cf./ https://tailwind.primevue.org/vite/.
- [ ] Unpredictable color for ring (dark mode). This is an example of a more general problem.
  UiStyle ~inputTextDefaultClasses~ redefines the ring color /e.g./ inside ~InputText~ in ~FormTextInput.vue~, but when
  ~parent.instance.$name !== 'InputGroup'~ the default preset values somehow overwrite the style, even though the latter is
  applied afterwards. When need to use ~:ptOptions="{ mergeProps: true }"~ because we don't want to rewrite the style entirely.
  Modifying a value in ~ui_style.ts~ works only temporarily or unpredictably, and /e.g./ adding ~!~ does not work, as
  it overwrites the ~errorClasses~. See [[https://github.com/tailwindlabs/tailwindcss/discussions/12733][Which bg color should be apply, when multiply bg-color class was appled to the same element?]]
  for an explanation and possible ways to solve this. /cf./ above PrimeVue upgrade.
- [ ] ~DataTable~ filters /e.g./ ~filterMatchModeDropdown~ show a mix of primary and default green colors.
- [ ] Why does ~SectionLayout~ with ~secondary="true"~ has a white border at the top in dark mode?
- [ ] Add p-float-label?
- [ ] ~Divider~ styling, thickness and color.
- [ ] Add ~MeterGroup~ or ~ProgessBar~ for upload? See also [[https://github.com/dieterich-lab/scimodom/issues/94][Dataset upload progress]].

** TODO TESTS [1/2]

- [X] update :: Warnings and deprecation summary.
- [ ] refactor :: ~test_dataset~ and ~test_validator~ still depend on the importer, /cf./ mock importer in ~test_dataset_api~.

** TODO GENERAL [1/7]

- [ ] dependencies :: Pandas is used only in ~SetupService~.

- [ ] question :: Usage of Flask ~SESSION_COOKIE_SAMESITE~. Is ~None~ supposed to be a string or ~None~? And why not use default ~Lax~?

- [X] Export file naming convention is inconsistent between Search, Browse, and Compare.
- [ ] ~TaxaSelection~ has modification id props and watches it, but it never uses it?
- [ ] The CJS build of Vite's Node API is deprecated, see [[https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated][Vite CJS node API deprecated]] for more details.
- [ ] Error handling for data import remains somewhat inconsistent. The interface ~DatasetPostRequest~ defines what information is
  transferred to the backend for data upload (management API). The ~source~ for upload is the full path to the temporary ~file_id~.
  The ~error_summary~ (~BedImportTooManyErrors~) is defined by the ~TextFileReader.report_error~, and reports the full path to the
  ~file_id~, which is irrelevant for the user in general. This is also used in Comparison (dataset API), where the actual file name
  is available and used as a source, with useful information for the user. In handling other similar errors, the source is never
  reported /e.g./ in the case of ~BedImportEmptyFile~, this is not shown in ~user_message~, but in ~message~. I don't know what are the
  security implications in all cases.
- [ ] On "auto log out" /e.g./ refresh, accessing URL via address, /etc./, unexpected behavior is sometimes observed, /e.g./ the
  dialog box is not systematically showing up. The ~Not logged in.~ message at the top left is awkward.

*** TODO FEATURE REQUEST [0/2]

- [ ] Vueuse (title)
- [ ] Loading bar at the top

* LONG-TERM

** IMPROVEMENTS


** QUESTIONS
